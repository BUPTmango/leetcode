package simple_level.coder_gold;

/**
 * 面试题 16.15. 珠玑妙算
 * 珠玑妙算游戏（the game of master mind）的玩法如下。
 *
 * 计算机有4个槽，每个槽放一个球，颜色可能是红色（R）、黄色（Y）、绿色（G）或蓝色（B）。例如，计算机可能有RGGB 4种（槽1为红色，槽2、3为绿色，槽4为蓝色）。作为用户，你试图猜出颜色组合。打个比方，你可能会猜YRGB。要是猜对某个槽的颜色，则算一次“猜中”；要是只猜对颜色但槽位猜错了，则算一次“伪猜中”。注意，“猜中”不能算入“伪猜中”。
 *
 * 给定一种颜色组合solution和一个猜测guess，编写一个方法，返回猜中和伪猜中的次数answer，其中answer[0]为猜中的次数，answer[1]为伪猜中的次数。
 *
 * 示例：
 *
 * 输入： solution="RGBY",guess="GGRR"
 * 输出： [1,1]
 * 解释： 猜中1次，伪猜中1次。
 * 提示：
 *
 * len(solution) = len(guess) = 4
 * solution和guess仅包含"R","G","B","Y"这4种字符
 *
 * @author Wang Guolong
 * @version 1.0
 * @date 2020/3/29 12:35 下午
 */
public class MasterMind {
    /**
     * 简单思路：可以看做是消除游戏，已经相同的“猜中”组，在猜中之后会对第二次检测的“伪猜中”中造成干扰，将猜中后的组变为另外的数字标记。
     * 伪猜中组采取同样的思路，改变为另一种数字，防止对随后的循环进行干扰，化为简单的数组替代问题。
     *
     * @param solution
     * @param guess
     * @return
     */
    public int[] masterMind(String solution, String guess) {
        int[] ans = new int[2];
        int len = solution.length();

        char[] ch1 = solution.toCharArray();
        char[] ch2 = guess.toCharArray();

        for( int i=0; i<len; i++ ){
            if( ch1[i] == ch2[i] ){
                ans[0]++;
                ch1[i] = ch2[i] = '0';
            }

        }
        for( int i=0; i<len; i++ ){
            for( int j=0; j<len; j++ ){
                if( ch1[i] == ch2[j] && i!=j && ch1[i] != '0' ){
                    ans[1]++;
                    ch1[i] = '8';
                    ch2[j] = '7';
                }
            }
        }
        return ans;
    }
}
